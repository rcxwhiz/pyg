In order to make this autograder useful & simple, students will need to have a line on every file to load some data
This data will be the commands or data which the students will use to output the files

To make it easy on the student, the grader will just run the student's file in a directory with just the specific file
Could include a batch and sh file for students to run or they could run it in spyder or something

There will need to be headers and footers added to the students files to make the code die if it runs too long and
put it in the right working directory

The points will be awarded base on output matching or beginning with certain things
Graphs will be compared as images

This will be a terminal program, but it would be nice if it had an interface

Maybe there should be a student version that is just a GUI program they download that's ready to go?
They would get some saved output and input files
The program should just have an option to generate input and output stuff but then run off of saved inputs and outputs
You just choose which cases you want to send the students and it will make a zip that they can run to test their code
Note - if they have anaconda they should have pyqt, don't want to make an exe because mac kids

The student version will have a small GUI that simply says "please put your file here {file path + name}" and has
a single run button, then it either has some popup or something showing what points were achieved and lost with
comparisons between the student outfiles and the given key outfiles
The thing the student downloads should make it easy to tell which inputs go to which outputs

There could also be criteria for certain function definitions to be included too? This could also be used to say there
will be custom headers / footers for fun things like a timed program or seeing if you can succeed with executing a
given function.

In the end when you run the instructor program, it will give you some sort of csv or table with what all the students
did and didn't get with a lot of homework stats and such
A classlist could be imported/exported to keep track of people who didn't turn in the HW?

There needs to be a way to reweight everything to 100

If the students are beginners, they should probably be given the code that loads the input

Maybe there could be an option to have no input or to hide the output

Run student result stuff will go in a zip

Could transplant my GUI for grading from before that would be sick

Could make the points awarded progressive on number of cases passed or number of lines matched
Could be set to some default linear scale of lines or test cases matched
How would there be custom criteria for having certain things in the code?
I will need to write out a few rubrics to figure it out

The output files should be analyzied and give warnings if packages were attempted to be imported that didn't exist on the interpreter

There should still be an option to grade (or at least look at) excel files
Could actually grade them if given a template, could have a UI where you select the cells that matter
Could test to see if the cell value vs equation are the same to make sure they didn't just punch it in

The UI should be able to resize (text windows grow and shrink, labels start to scroll?)

On the python viewing GUI, it should attempt to stay on the same problem number when switching between students
Finding a way to bind the arrow keys would be pretty lit

It would be cool if it had all the old functionality so it still worked for HWs without strict formatting

When transplanting the GUI make it so that things like file name number and student are on different lines / in different labels

Figure out why sometimes the program killed unresponsive message comes up when it theoretically shouldn't (I think this is just due to volume of programs)

Include time run in timeout message

There should be some built in diff checking to show what % similarity there is between files

As of this moment, weighting different test cases has been tabled

There are some serious security risks going on here that probably require at least screening imported packages and
writing files

Make it so that legal imports are found from sag info or something
Probably rename it to HW settings

I think there is an issue where headers are getting removed from source files?